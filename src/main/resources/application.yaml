server:
  port: 8084
  shutdown: graceful
  forward-headers-strategy: framework

spring:
  main:
    web-application-type: reactive
  application:
    name: stocks-auth
#  security:
#    oauth2:
#      client:
#        registration:
#          stocks-client-oidc:
#            provider: spring
#            client-id: stocks-client
#            client-name: articles-client-oidc
#            client-secret: secret
#            scope: openid
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
#        provider:
#          spring:
##            issuer-uri: http://auth-server:9000
#            authorization-uri: http://localhost:8081/spring-security-oauth-server/oauth/authorize
#            token-uri: http://localhost:8081/spring-security-oauth-server/oauth/token
#            user-info-uri: http://localhost:8088/spring-security-oauth-resource/users/extra
#            user-name-attribute: user_name
  r2dbc:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    pool:
      initial-size: 4
      max-size: 16
  jackson:
    deserialization:
      ADJUST_DATES_TO_CONTEXT_TIME_ZONE: false
      FAIL_ON_UNKNOWN_PROPERTIES: false
      FAIL_ON_NUMBERS_FOR_ENUMS: true
      FAIL_ON_NULL_FOR_PRIMITIVES: true
      USE_BIG_DECIMAL_FOR_FLOATS: true
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    generator:
      WRITE_BIGDECIMAL_AS_PLAIN: true

okta:
  oauth2:
    issuer: https://{DOMAIN}/
    client-id: {CLIENT_ID}
    client-secret: {CLIENT_SECRET}
    audience: {AUDIENCE}

application:
  client:
    sourceUrl: http://localhost:8088/api/v1/sec

logging:
  level:
    ROOT: INFO
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} [%thread] %clr(%-5level) %clr(%logger{36}){magenta} - %msg%n"
